### YamlMime:TSType
name: NodeHttpClient
uid: '@aspnet/signalr.NodeHttpClient'
package: '@aspnet/signalr'
summary: ''
fullName: NodeHttpClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: NodeHttpClient(ILogger)
    uid: '@aspnet/signalr.NodeHttpClient.constructor'
    package: '@aspnet/signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new NodeHttpClient(logger: ILogger)'
      parameters:
        - id: logger
          type: <xref uid="@aspnet/signalr.ILogger" />
          description: ''
methods:
  - name: delete(string)
    uid: '@aspnet/signalr.NodeHttpClient.delete'
    package: '@aspnet/signalr'
    summary: >-
      Issues an HTTP DELETE request to the specified URL, returning a Promise
      that resolves with an <xref:%40aspnet%2Fsignalr.HttpResponse> representing
      the result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(url: string)'
      parameters:
        - id: url
          type: string
          description: The URL for the request.
      return:
        type: Promise&lt;<xref uid="@aspnet/signalr.HttpResponse" />&gt;
        description: >-
          A Promise that resolves with an {@link @aspnet/signalr.HttpResponse}
          describing the response, or rejects with an Error indicating a
          failure.
  - name: 'delete(string, HttpRequest)'
    uid: '@aspnet/signalr.NodeHttpClient.delete_1'
    package: '@aspnet/signalr'
    summary: >-
      Issues an HTTP DELETE request to the specified URL, returning a Promise
      that resolves with an <xref:%40aspnet%2Fsignalr.HttpResponse> representing
      the result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(url: string, options: HttpRequest)'
      parameters:
        - id: url
          type: string
          description: The URL for the request.
        - id: options
          type: <xref uid="@aspnet/signalr.HttpRequest" />
          description: >-
            Additional options to configure the request. The 'url' field in this
            object will be overridden by the url parameter.
      return:
        type: Promise&lt;<xref uid="@aspnet/signalr.HttpResponse" />&gt;
        description: >-
          A Promise that resolves with an {@link @aspnet/signalr.HttpResponse}
          describing the response, or rejects with an Error indicating a
          failure.
  - name: get(string)
    uid: '@aspnet/signalr.NodeHttpClient.get'
    package: '@aspnet/signalr'
    summary: >-
      Issues an HTTP GET request to the specified URL, returning a Promise that
      resolves with an <xref:%40aspnet%2Fsignalr.HttpResponse> representing the
      result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(url: string)'
      parameters:
        - id: url
          type: string
          description: The URL for the request.
      return:
        type: Promise&lt;<xref uid="@aspnet/signalr.HttpResponse" />&gt;
        description: >-
          A Promise that resolves with an {@link @aspnet/signalr.HttpResponse}
          describing the response, or rejects with an Error indicating a
          failure.
  - name: 'get(string, HttpRequest)'
    uid: '@aspnet/signalr.NodeHttpClient.get_1'
    package: '@aspnet/signalr'
    summary: >-
      Issues an HTTP GET request to the specified URL, returning a Promise that
      resolves with an <xref:%40aspnet%2Fsignalr.HttpResponse> representing the
      result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(url: string, options: HttpRequest)'
      parameters:
        - id: url
          type: string
          description: The URL for the request.
        - id: options
          type: <xref uid="@aspnet/signalr.HttpRequest" />
          description: >-
            Additional options to configure the request. The 'url' field in this
            object will be overridden by the url parameter.
      return:
        type: Promise&lt;<xref uid="@aspnet/signalr.HttpResponse" />&gt;
        description: >-
          A Promise that resolves with an {@link @aspnet/signalr.HttpResponse}
          describing the response, or rejects with an Error indicating a
          failure.
  - name: getCookieString(string)
    uid: '@aspnet/signalr.NodeHttpClient.getCookieString'
    package: '@aspnet/signalr'
    summary: Gets all cookies that apply to the specified URL.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getCookieString(url: string)'
      parameters:
        - id: url
          type: string
          description: The URL that the cookies are valid for.
      return:
        type: string
        description: >-
          A string containing all the key-value cookie pairs for the specified
          URL.
  - name: post(string)
    uid: '@aspnet/signalr.NodeHttpClient.post'
    package: '@aspnet/signalr'
    summary: >-
      Issues an HTTP POST request to the specified URL, returning a Promise that
      resolves with an <xref:%40aspnet%2Fsignalr.HttpResponse> representing the
      result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function post(url: string)'
      parameters:
        - id: url
          type: string
          description: The URL for the request.
      return:
        type: Promise&lt;<xref uid="@aspnet/signalr.HttpResponse" />&gt;
        description: >-
          A Promise that resolves with an {@link @aspnet/signalr.HttpResponse}
          describing the response, or rejects with an Error indicating a
          failure.
  - name: 'post(string, HttpRequest)'
    uid: '@aspnet/signalr.NodeHttpClient.post_1'
    package: '@aspnet/signalr'
    summary: >-
      Issues an HTTP POST request to the specified URL, returning a Promise that
      resolves with an <xref:%40aspnet%2Fsignalr.HttpResponse> representing the
      result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function post(url: string, options: HttpRequest)'
      parameters:
        - id: url
          type: string
          description: The URL for the request.
        - id: options
          type: <xref uid="@aspnet/signalr.HttpRequest" />
          description: >-
            Additional options to configure the request. The 'url' field in this
            object will be overridden by the url parameter.
      return:
        type: Promise&lt;<xref uid="@aspnet/signalr.HttpResponse" />&gt;
        description: >-
          A Promise that resolves with an {@link @aspnet/signalr.HttpResponse}
          describing the response, or rejects with an Error indicating a
          failure.
  - name: send()
    uid: '@aspnet/signalr.NodeHttpClient.send'
    package: '@aspnet/signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function send()
      return:
        type: Promise&lt;<xref uid="@aspnet/signalr.HttpResponse" />&gt;
        description: ''
extends: <xref uid="@aspnet/signalr.HttpClient" />
